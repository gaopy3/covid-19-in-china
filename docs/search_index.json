[["index.html", "Covid-19-China Chapter 1 Introduction", " Covid-19-China Qixiao He, Wenzhou Ma, Panyu Gao 2021-04-12 Chapter 1 Introduction We would like to choose this topic of COVID-19 in China because this is a pandemic which changes our life entirely and China is the homeland for all the three members in our group. As international students, we are the group of people who are most sensitive to the changing situation of the world and we want to look back upon what we have experienced and hope we can gather a piece using data visualization on how we human are able to get our lives back on track and what our homeland country China has achieved when facing such hazard. Coronavirus disease 2019 (COVID-19) is a contagious disease caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The first case was identified in Wuhan, China, in December 2019. The disease has since spread worldwide, leading to an ongoing pandemic. (From Wikipedia) Since the COVID-19 outbroke in Wuhan from Hubei province in China, the pandemic situation in China was extremely unpleasant back in early 2020. However, with the strong policy of Chinese Government and the faith in it people, China was able to withhold the pressure and the people in China have went back to normal life. In this visualization report, we want to address three major problems: How does the pandemic spread in China? Does it follow a pattern (eg. Geometric) or not? What is the real situation of this pandemic in each province of China? What can we find when we look at those provinces individually? How does the epidemic in China relate to the major events (eg. Public policy) occurred during the same period? Compared it with what’s happening in the US. "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources The data of the COVID-19 in China was obtained using scratching methods in Python from the National Health Commission of China (http://www.nhc.gov.cn/xcs/yqtb/list_gzbd.shtml) and from Baidu Baike(https://baike.baidu.com/item/2020%E5%B9%B4%E4%B8%AD%E5%9B%BD%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%96%AB%E6%83%85%E5%8F%91%E5%B1%95%E5%AE%9E%E5%BD%95/50157160?fr=aladdin). The data itself is collected by the officials in China with authority. The data in China contains the pandemic information within 34 provinces including Hongkong, Taiwan and Macao. In each province, we have variables in the number of cumulative confirmed cases, death cases and cured cases. And the nature of this data is a time series with a duration slightly over a month from 1/22/2020 to 2/29/2020. Next we have data with overall views in both China and the US. The data itself is collected by WHO (https://www.who.int/) and we obtained it on GitHub (https://github.com/CSSEGISandData/COVID-19). The data with overall views contains the information overall in China and US with variables in cumulative confirmed cases, death cases and daily increases in confirmed cases across a time period of over 400 days starting 1/22/2020. Some minor issues in the data from Chinese government because it is scratched from the web. We are managed to fix it manually since we cannot find a way to fix it with codes. "],["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation The detailed code would be represented in Python with links in this section. Basically for the first two questions we are addressing, we use mainly the dataset from what we have scratched from web and we gathered them into one dataset. For the final question, we managed to find a moving average on each variable with a 7-day window because it can provide us with both a direct and smooth look on the graph. code link: https://github.com/ainiyo123/data-transformation.git First, loading the COVID-19 data of each province into the environment. The data of each province is stored in different csv files. Therefore, we use lapply to load all data at once. Since the date in each file has different format, we need to uniform format. After that, store all data in a dataframe. setwd(&quot;~/Columbia_DS/EDAV/final_project/covid data&quot;) file_name &lt;- list.files(pattern=&quot;*.csv&quot;) covid_data &lt;- lapply(file_name, function(x) read.csv(x, header = TRUE, row.names = 1)) for (i in 1:34) { if (grepl(pattern = &quot;月&quot;,x = covid_data[[i]][1,1])){ covid_data[[i]]$Date &lt;- as.Date(paste0(&#39;2020年&#39;, covid_data[[i]]$Date), &quot;%Y年%m月%d日&quot;) }else{ covid_data[[i]]$Date &lt;- as.Date(paste0(&#39;2020/&#39;, covid_data[[i]]$Date), &quot;%Y/%m/%d&quot;) } } setwd(&quot;~/Columbia_DS/EDAV/final_project&quot;) province_csvfile &lt;- read.csv(&#39;province_csvfile.csv&#39;, header = FALSE) date_range &lt;- seq.Date(from = as.Date(&quot;2020/01/19&quot;,format = &quot;%Y/%m/%d&quot;), by = &quot;day&quot;, length.out = 42) covid_data_province &lt;- data.frame(date = date_range) for (i in 1:34) { name_idx &lt;- which(province_csvfile$V2==file_name[i]) confirmed &lt;- rep(0, 42) date_province &lt;- covid_data[[i]]$Date province_csvfile$V1[name_idx] for (j in 1:42){ idx &lt;- which(date_province==date_range[j]) if (length(idx)!=0){ confirmed[j] = covid_data[[i]]$Confirmed.cases[idx] }else if(length(idx)==0 &amp;&amp; j!=1){ confirmed[j] = confirmed[j-1] } } covid_data_province &lt;- transform(covid_data_province, new_col = confirmed) covid_data_province &lt;- plyr::rename(covid_data_province, c(new_col=province_csvfile$V1[name_idx])) } province_order &lt;- names(covid_data_province)[order(covid_data_province[42, 2:35], decreasing = T)+1] head(covid_data_province[1:8]) ## date Anhui Macau Beijing Chongqing Guangdong Gansu Guangxi ## 1 2020-01-19 0 0 0 0 0 0 0 ## 2 2020-01-20 0 0 5 0 1 0 0 ## 3 2020-01-21 0 0 10 5 3 0 0 ## 4 2020-01-22 1 1 10 9 32 0 2 ## 5 2020-01-23 15 2 22 27 53 2 13 ## 6 2020-01-24 39 2 36 57 78 4 23 For the cured data, we use the same method to strom them in one dataframe. covid_cured_data_province &lt;- data.frame(date = date_range) for (i in 1:34) { name_idx &lt;- which(province_csvfile$V2==file_name[i]) cured &lt;- rep(0, 42) date_province &lt;- covid_data[[i]]$Date province_csvfile$V1[name_idx] for (j in 1:42){ idx &lt;- which(date_province==date_range[j]) if (length(idx)!=0){ if (is.na(covid_data[[i]]$Cured[idx])) { covid_data[[i]]$Cured[idx] = 0 } else { cured[j] = covid_data[[i]]$Cured[idx] } }else if(length(idx)==0 &amp;&amp; j!=1){ cured[j] = cured[j-1] } } covid_cured_data_province &lt;- transform(covid_cured_data_province, new_col = cured) covid_cured_data_province &lt;- plyr::rename(covid_cured_data_province, c(new_col=province_csvfile$V1[name_idx])) } We then calculate new cases through cumulative confirmed data. covid_added_byday &lt;- covid_data_province for (i in 42:2){ covid_added_byday[i,c(2:35)] &lt;- covid_added_byday[i,c(2:35)] - covid_added_byday[i-1,c(2:35)] } Now, these dataframes are messy, we need to tidy them before plotting. # confirmed covid_data_tidy &lt;- covid_data_province %&gt;% pivot_longer(cols = !date, names_to = &quot;province&quot;, values_to = &quot;confirmed_cases&quot;) # cured covid_cured_data_tidy &lt;- covid_cured_data_province %&gt;% pivot_longer(cols = !date, names_to = &quot;province&quot;, values_to = &quot;cured&quot;) # added covid_added_byday_tidy &lt;- covid_added_byday %&gt;% pivot_longer(cols = !date, names_to = &quot;province&quot;, values_to = &quot;added_confirmed_cases&quot;) covid_added_byday_tidy$province[covid_added_byday_tidy$province == &#39;Inner.Mongoria&#39;] &lt;- &#39;Inner Mongolia&#39; covid_added_byday_tidy$province[covid_added_byday_tidy$province == &#39;Hong.Kong&#39;] &lt;- &#39;Hong Kong&#39; # confirm cure confirmed_cured &lt;- inner_join(covid_data_tidy, covid_cured_data_tidy, by = c(&#39;date&#39;,&#39;province&#39;)) confirmed_cured_tidy &lt;- confirmed_cured %&gt;% pivot_longer(cols = !c(&#39;date&#39;,&#39;province&#39;), names_to = &quot;type&quot;, values_to = &quot;value&quot;) head(covid_added_byday_tidy) ## # A tibble: 6 x 3 ## date province added_confirmed_cases ## &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2020-01-19 Anhui 0 ## 2 2020-01-19 Macau 0 ## 3 2020-01-19 Beijing 0 ## 4 2020-01-19 Chongqing 0 ## 5 2020-01-19 Guangdong 0 ## 6 2020-01-19 Gansu 0 "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values "],["results.html", "Chapter 5 Results", " Chapter 5 Results "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "]]
